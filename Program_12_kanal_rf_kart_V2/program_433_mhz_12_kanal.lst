CCS PCM C Compiler, Version 5.083, 43599               04-Kas-21 16:29

               Filename:   C:\Users\mustafa\Desktop\12_kanal_rf_kart_V2\Prg_12_kanal_rf_kart_V2_4\program_433_mhz_12_kanal.lst

               ROM used:   702 words (9%)
                           Largest free fragment is 2048
               RAM used:   33 (9%) at main() level
                           35 (10%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  02
0001:  MOVWF  0A
0002:  GOTO   297
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   033
001B:  BTFSS  0B.5
001C:  GOTO   01F
001D:  BTFSC  0B.2
001E:  GOTO   030
001F:  MOVF   22,W
0020:  MOVWF  04
0021:  MOVF   23,W
0022:  MOVWF  77
0023:  MOVF   24,W
0024:  MOVWF  78
0025:  MOVF   25,W
0026:  MOVWF  79
0027:  MOVF   26,W
0028:  MOVWF  7A
0029:  MOVF   20,W
002A:  MOVWF  0A
002B:  SWAPF  21,W
002C:  MOVWF  03
002D:  SWAPF  7F,F
002E:  SWAPF  7F,W
002F:  RETFIE
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   036
0033:  BCF    0A.3
0034:  BCF    0A.4
0035:  GOTO   059
.................... /* 
.................... PROGRAMIN GENEL ÇALIÞMA MANTIÐI; 
....................  * Bu program 12 kanallý elcik kumanda adýyla geçen kumandaya uygun yazýldý. 
....................   
....................  * her kumandanýn þifre bilgisini lojik analizör veya dijital osiloskop ile okuyup programa entegre etmek gerekiyor. Çünkü kumandalarýn dýþ 
....................  görünüþü ayn olsada içinde kullanýlan entegreler ve haliyle veri paketlerinin yapýlarý deðiþebiliyor. 
....................  
....................  * 433mhz alýcýnýn DO çýkýþý mcu'nun int_ext giriþine baðlý. her tuþa basmada gelen verinin yükselen kenarýnda kesme oluþup veri okunuyor.  
.................... Dolayýsýyla sürekli okuma yapan bir sistem. 
....................  
....................  * gelen veri paketinin ilk 16 bitlik kýsmý kumandanýn þifre bilgisi, sonraki 8 bitlik veri tuþun numarasý olarak geliyor.  
.................... 25. bit(senkron biti) daima 0 olduðu için programda göz ardý ediliyor. 
....................  
.................... * SC2262 entegresi 8 adet adres bitine sahip. Adres biti "0" (L) konumunda olunca þifre 00, "1" (H) konumunda olunca þifre 11  
.................... ve adres biti boþta (F) olunca 01 bilgisi ile þifre üretiyor. Yani her adres bitinin 3 farklý deðeri var. 
....................  
....................  * haberleþme sinyalinde her bir bit yaklaþýk 2000usn sürüyor. veri paketlerinin arasýndaki boþluk dahil bir veri paketinin süresi  
....................  yaklaþýk ~55msn sürüyor. bu bilgi tüm röleleri kapatma kontrolü için tuþa sürekli basýldýðýnýn kontrol edildiði kýsýmda kullanýlýyor. 
....................  
....................  * timer0 kesmesi 32.7msn olarak ayarlandý. 
....................   
....................  * kumandanýn yolladýðý her bitin süresi 2000usn ve lojik 1 olanlar geniþ, 0 olanlar dar sinyal süresine sahip.  
....................  lojik 1 için ~1500usn high + ~500usn low süresi kullanýlýrken 
....................  lojik 0 için ~500usn high + ~1500usn low süresi kullanýlýyor.  
....................   
....................  * yukarýdaki açýklamaya istinaden her gelen verinin yükselen kenarýndan 1000usn sonra veri kontrol ediliyor. eðer gelen veri "0" ise  
.................... bu anda okunan sinyal de "0" oluyor. deðilse "1" oluyor. 
....................  
....................  * her gelen yükselen kenardan sonra veri okunuyor, gerekli kaydýrma iþlemlerinden sonra o ana kadar oluþan veri deðeri röle kontrol 
....................  kýsmýnda kontrol edilerek gelen veri uygunsa gerekli iþlem yapýlýyor. 
....................   
....................  * her röle iþleminden sonra timer0 sayýcýsý sýfýrlanýyor. Bu sayede kullanýcýnýn ne kadar süre boyunca butona basýlý tuttuðu kontrol ediliyor. 
....................   
....................  * röle toggle iþleminden sonra kullanýcýnýn halen kumandaya basýp basmadýðý, timer0 deðerinin bir veri paketinden(45msn) daha uzun süreli 
....................  bir sayaç deðerine ulaþýp ulaþmadýðýndan anlaþýlýyor. 
....................   
....................  * diyelim ki 5 röle aktif durumda. kullanýcý 8. röleye bastý, röle toggle yaptý. 500msn geçti sonra timer sayacý sýfýrlandý. 
....................  sayac her 32.7msn de bir deðer arttýrýyor. bu arada gelen veriler halen okunuyor. eðer kullanýcý elini ayný tuþa basmaya devam ediyorsa 
....................  gelen veri önceki tuþ olan 8 numara ile eþleþti ise ve timer sayacý <=2 ise yani geçen süre 65msn den az ise kullanýcý elini butondan  
....................  çekmemiþ demektir. bu sayede tüm röleler pasif duruma getirilebilir. 
....................  
....................  * bu program SC2262 entegresine göre yazýldý. ilk dört bayt adres verisi olutor. Sonra gelen 8 bitlik veri tuþun numarasý yerine geçiyor.  
....................  25. bit senkron biti olduðundan göz ardý ediliyor. 
....................  veride kayýp olmasý durumunu engellemek için entegre basýlan tuþ numarasýndaki her bir biti iki bit ile ifade ediyor.  
....................  ÖRNEK : diyelim ki 3 numaralý tuþa basýlmýþ olsun. 3'ün binary karþýlýðý 0x0011 iken her sýfýr için iki defa sýfýr ve  
....................  her bir için iki defa 1 kullanýlmýþ. yani 3 tuþunun karþýlýðý  0x00001111 yani 0F olmuþ. bu deðerin baþýna bu kumanda için ayarlanan  
....................  0x545F kodu da eklenince 3 tuþunun karþýlýðý tam olarak 0x545F0F oluyor. (25. biti görmezden geliyoruz) 
.................... */ 
.................... #include <16F876.h> 
.................... //////////// Standard Header file for the PIC16F876 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F876 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOBROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOPROTECT                  //Code protected from reads 
.................... #FUSES NOCPD                      //Data EEPROM Code Protected 
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES PUT                      //Power Up Timer 
....................  
.................... #priority EXT, RTCC 
....................  
.................... #use delay(crystal=4000000) 
*
0091:  MOVLW  3D
0092:  MOVWF  04
0093:  BCF    03.7
0094:  MOVF   00,W
0095:  BTFSC  03.2
0096:  GOTO   0A5
0097:  MOVLW  01
0098:  MOVWF  78
0099:  CLRF   77
009A:  DECFSZ 77,F
009B:  GOTO   09A
009C:  DECFSZ 78,F
009D:  GOTO   099
009E:  MOVLW  4A
009F:  MOVWF  77
00A0:  DECFSZ 77,F
00A1:  GOTO   0A0
00A2:  GOTO   0A3
00A3:  DECFSZ 00,F
00A4:  GOTO   097
00A5:  RETURN
.................... #use fast_io(A) 
.................... #use fast_io(B) 
.................... #use fast_io(C) 
....................  
.................... #define mod_sec_1          PIN_A0     
.................... #define mod_sec_2          PIN_A1 
.................... #define mod_sec_3          PIN_A2     
.................... #define mod_sec_4          PIN_A3    
.................... #define rf_data            PIN_B0 
.................... #define buton_kullanici    PIN_C2 
....................  
.................... #define role_1             PIN_C3 
.................... #define role_2             PIN_C4 
.................... #define role_3             PIN_C5 
.................... #define role_4             PIN_C6 
.................... #define role_5             PIN_C7 
.................... #define role_6             PIN_B1 
.................... #define role_7             PIN_B2 
.................... #define role_8             PIN_B3 
.................... #define role_9             PIN_B4 
.................... #define role_10            PIN_B5 
.................... #define role_11            PIN_B6 
.................... #define role_12            PIN_B7 
.................... #define led_kullanici      PIN_C1 
....................  
.................... #define evet                  5 
.................... #define hayir                 10 
.................... #define role_genel_kapatma_yapildi  5 
.................... #define role_genel_kapatma_yok      10 
....................  
.................... volatile unsigned int8     kesme_geldimi=hayir; 
.................... volatile unsigned int16    genel_sayac=0; 
.................... volatile unsigned int8     veri_geldimi=0; 
.................... volatile unsigned int32    gelen_veri=0; 
.................... volatile unsigned int32    veri=0; 
.................... volatile unsigned int32    onceki_veri=0; 
.................... volatile unsigned int32    timer_sayaci=0; 
.................... volatile unsigned int8     guvenlik_icin_veri_sifirlama_sayaci=0;// devre boþta çalýþýrken arada sýrada kendi kendine bazý röleleri açýyordu. güvenliði arttýrmak adýna 
....................                            // devrede kumandadan veri giriþi yokken yaklaþýk her 1 saniyede bir defa gelen veri kayýtçýsýný temizlemek için bu kayýtçýyý timer kesmesinde 
....................                            // arttýrýp kontrol elemaný olarak kullanýyorum. 
....................  
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void sistem_test(); 
.................... void mcu_init(); 
.................... void ram_init(); 
.................... void role_ayarla(); 
....................  
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... #INT_RTCC 
.................... void  RTCC_isr(void)  
.................... { 
....................    guvenlik_icin_veri_sifirlama_sayaci++;// devre boþta dururken bir kaç defa kendi kendine röleyi açtý. bunu engellemek için tuþa basýlý deðilken 
*
0036:  INCF   3B,F
....................    if(guvenlik_icin_veri_sifirlama_sayaci >=10 )// yaklaþýk her 1 saniyede 1 defa gelen veri bilgileri silinecek, bir de böyle deneyeyim. 
0037:  MOVF   3B,W
0038:  SUBLW  09
0039:  BTFSC  03.0
003A:  GOTO   040
....................    { 
....................    guvenlik_icin_veri_sifirlama_sayaci=0; 
003B:  CLRF   3B
....................    gelen_veri=0; 
003C:  CLRF   2E
003D:  CLRF   2D
003E:  CLRF   2C
003F:  CLRF   2B
....................    }    
....................        
....................    if(timer_sayaci<50)   
0040:  MOVF   3A,F
0041:  BTFSS  03.2
0042:  GOTO   055
0043:  MOVF   39,F
0044:  BTFSS  03.2
0045:  GOTO   055
0046:  MOVF   38,F
0047:  BTFSS  03.2
0048:  GOTO   055
0049:  MOVF   37,W
004A:  SUBLW  31
004B:  BTFSS  03.0
004C:  GOTO   055
....................    { 
....................    timer_sayaci++; 
004D:  MOVLW  01
004E:  ADDWF  37,F
004F:  BTFSC  03.0
0050:  INCF   38,F
0051:  BTFSC  03.2
0052:  INCF   39,F
0053:  BTFSC  03.2
0054:  INCF   3A,F
....................    } 
.................... } 
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
0055:  BCF    0B.2
0056:  BCF    0A.3
0057:  BCF    0A.4
0058:  GOTO   01F
.................... #INT_EXT 
.................... void  EXT_isr(void)  
.................... { 
....................    kesme_geldimi=evet; 
0059:  MOVLW  05
005A:  MOVWF  27
005B:  BCF    0B.1
005C:  BCF    0A.3
005D:  BCF    0A.4
005E:  GOTO   01F
.................... } 
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void veri_al() 
.................... { 
....................    enable_interrupts(INT_EXT); 
*
00CB:  BSF    0B.4
....................    kesme_geldimi=hayir; // kesme oluþtuðunda int_ext fonksiyonunda bu bilgi "evet" olarak yazýlýr.  
00CC:  MOVLW  0A
00CD:  MOVWF  27
....................    while(kesme_geldimi==hayir) 
00CE:  MOVF   27,W
00CF:  SUBLW  0A
00D0:  BTFSC  03.2
....................    {}    
00D1:  GOTO   0CE
....................    gelen_veri=gelen_veri<<1;  // önceki veri bir bit sola ötelenip aþaðýda yeni veri lsb bitine yazýlýr. 
00D2:  BCF    03.0
00D3:  RLF    2B,F
00D4:  RLF    2C,F
00D5:  RLF    2D,F
00D6:  RLF    2E,F
....................    delay_us(1000); // eðer gelen veri 0 ise sinyalin yükselen kenarýndan 1000usn sonra 0 konumuna düþmüþ oluyor.  
00D7:  MOVLW  01
00D8:  MOVWF  3D
00D9:  CALL   091
....................    if(input(rf_data)==1)   // eðer bu noktada rf_data=0 ise gelen veri "0",  rf_data=0 ise gelen veri "1" demektir. 
00DA:  BTFSC  06.0
....................    { 
....................    bit_set(gelen_veri,0);// gelen veri "1" imiþ. 
00DB:  BSF    2B.0
....................    }    
00DC:  BCF    0A.3
00DD:  BCF    0A.4
00DE:  GOTO   2BB (RETURN)
.................... } 
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void role_aktiflestirme_islem_sonu() 
.................... { 
....................    disable_interrupts(INT_EXT); 
00DF:  BCF    0B.4
....................    delay_ms(500);  
00E0:  MOVLW  02
00E1:  MOVWF  3C
00E2:  MOVLW  FA
00E3:  MOVWF  3D
00E4:  CALL   091
00E5:  DECFSZ 3C,F
00E6:  GOTO   0E2
....................    timer_sayaci=0;  
00E7:  CLRF   3A
00E8:  CLRF   39
00E9:  CLRF   38
00EA:  CLRF   37
....................    output_low(led_kullanici); 
00EB:  BCF    07.1
....................    enable_interrupts(INT_EXT); 
00EC:  BSF    0B.4
00ED:  RETURN
.................... } 
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void main() 
*
0297:  MOVF   03,W
0298:  ANDLW  1F
0299:  MOVWF  03
029A:  MOVLW  0A
029B:  MOVWF  27
029C:  CLRF   29
029D:  CLRF   28
029E:  CLRF   2A
029F:  CLRF   2E
02A0:  CLRF   2D
02A1:  CLRF   2C
02A2:  CLRF   2B
02A3:  CLRF   32
02A4:  CLRF   31
02A5:  CLRF   30
02A6:  CLRF   2F
02A7:  CLRF   36
02A8:  CLRF   35
02A9:  CLRF   34
02AA:  CLRF   33
02AB:  CLRF   3A
02AC:  CLRF   39
02AD:  CLRF   38
02AE:  CLRF   37
02AF:  CLRF   3B
02B0:  BSF    03.5
02B1:  BSF    1F.0
02B2:  BSF    1F.1
02B3:  BSF    1F.2
02B4:  BCF    1F.3
02B5:  BCF    03.7
.................... { 
....................    mcu_init(); 
02B6:  BCF    03.5
02B7:  GOTO   05F
....................    ram_init(); 
02B8:  GOTO   07B
....................    sistem_test(); 
02B9:  GOTO   0A6
....................    
....................    while(true) 
....................    {    
....................    veri_al(); 
02BA:  GOTO   0CB
....................    role_ayarla(); 
02BB:  GOTO   0EE
02BC:  GOTO   2BA
....................    } 
.................... } 
....................  
02BD:  SLEEP
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void mcu_init() 
.................... { 
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_128|RTCC_8_BIT);      //32.765 msn overflow 
*
005F:  BSF    03.5
0060:  MOVF   01,W
0061:  ANDLW  C0
0062:  IORLW  06
0063:  MOVWF  01
....................    enable_interrupts(INT_RTCC);    
0064:  BCF    03.5
0065:  BSF    0B.5
....................    enable_interrupts(INT_EXT); 
0066:  BSF    0B.4
....................    EXT_INT_EDGE(L_TO_H); 
0067:  BSF    03.5
0068:  BSF    01.6
....................    enable_interrupts(GLOBAL); 
0069:  MOVLW  C0
006A:  BCF    03.5
006B:  IORWF  0B,F
....................     
....................  
....................    set_tris_a(0b11111111); 
006C:  MOVLW  FF
006D:  BSF    03.5
006E:  MOVWF  05
....................    set_tris_b(0b00000001); 
006F:  MOVLW  01
0070:  MOVWF  06
....................    set_tris_c(0b00000101); 
0071:  MOVLW  05
0072:  MOVWF  07
....................    port_B_pullups(FALSE); 
0073:  BSF    01.7
....................    output_a(0x00);    
0074:  BCF    03.5
0075:  CLRF   05
....................    output_b(0x00); 
0076:  CLRF   06
....................    output_c(0x00); 
0077:  CLRF   07
0078:  BCF    0A.3
0079:  BCF    0A.4
007A:  GOTO   2B8 (RETURN)
....................    } 
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void ram_init() 
.................... { 
....................       genel_sayac=0; 
007B:  CLRF   29
007C:  CLRF   28
....................       veri_geldimi=hayir; 
007D:  MOVLW  0A
007E:  MOVWF  2A
....................       gelen_veri=0; 
007F:  CLRF   2E
0080:  CLRF   2D
0081:  CLRF   2C
0082:  CLRF   2B
....................       kesme_geldimi=hayir; 
0083:  MOVWF  27
....................       timer_sayaci=50; 
0084:  CLRF   3A
0085:  CLRF   39
0086:  CLRF   38
0087:  MOVLW  32
0088:  MOVWF  37
....................       onceki_veri=0; 
0089:  CLRF   36
008A:  CLRF   35
008B:  CLRF   34
008C:  CLRF   33
....................       guvenlik_icin_veri_sifirlama_sayaci=0; 
008D:  CLRF   3B
008E:  BCF    0A.3
008F:  BCF    0A.4
0090:  GOTO   2B9 (RETURN)
.................... }   
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void role_ayarla() 
.................... { 
....................    veri = gelen_veri & 0x00FFFFFF; // orjinal gelen_veri üzerinde oynama yapmamak için bu eþitleme yapýldý. 
*
00EE:  MOVF   2B,W
00EF:  MOVWF  2F
00F0:  MOVF   2C,W
00F1:  MOVWF  30
00F2:  MOVF   2D,W
00F3:  MOVWF  31
00F4:  CLRF   32
....................  
....................    if(timer_sayaci<=2) // en son basýlan tuþtan 500msn süre geçtikten ve bu sürenin hemen ardýndan(~60msn içinde) tuþa basýldýysa bu durum  
00F5:  MOVF   3A,F
00F6:  BTFSS  03.2
00F7:  GOTO   138
00F8:  MOVF   39,F
00F9:  BTFSS  03.2
00FA:  GOTO   138
00FB:  MOVF   38,F
00FC:  BTFSS  03.2
00FD:  GOTO   138
00FE:  MOVF   37,W
00FF:  SUBLW  02
0100:  BTFSS  03.0
0101:  GOTO   138
....................                {     // kullanýcýnýn halen butona bastýðý olarak yorumlanýr. 
....................                 
....................                if( veri ==  onceki_veri ) // deðerlendirmeye alýnan veri önceki veri ile aynýysa tüm rölelerin kapatma iþlemi yapýlýr.  
0102:  MOVF   33,W
0103:  SUBWF  2F,W
0104:  BTFSS  03.2
0105:  GOTO   137
0106:  MOVF   34,W
0107:  SUBWF  30,W
0108:  BTFSS  03.2
0109:  GOTO   137
010A:  MOVF   35,W
010B:  SUBWF  31,W
010C:  BTFSS  03.2
010D:  GOTO   137
010E:  MOVF   36,W
010F:  SUBWF  32,W
0110:  BTFSS  03.2
0111:  GOTO   137
....................                    { // önceki veri ile ayný olma þartýnýn sebebi þu; kullanýcý tuþlara hýzlý hýzlý sýrasý ile basýnca yukarýda bahsedilen 
....................                    // kurgudaki 60msn içinde yeniden basýlan yani halen basýlmaya devam edilen buton algýsýný oluþturuyordu. Bunu engellemek 
....................                    // için kullanýcý ne kadar sýk aralýklarla basarsa bassýn þimdiki basýlan tuþ önceki ile ayný deðilse yani kullancý 
....................                    // tüm butonlarý sýrasýyla geziyorsa tüm rölelerin kapatýlmasý iþlemi yapýlmayacak demektir. 
....................                         output_low(role_1);   output_low(role_2);   output_low(role_3);   output_low(role_4); 
0112:  BCF    07.3
0113:  BCF    07.4
0114:  BCF    07.5
0115:  BCF    07.6
....................                         output_low(role_5);   output_low(role_6);   output_low(role_7);   output_low(role_8); 
0116:  BCF    07.7
0117:  BCF    06.1
0118:  BCF    06.2
0119:  BCF    06.3
....................                         output_low(role_9);   output_low(role_10);   output_low(role_11);   output_low(role_12); 
011A:  BCF    06.4
011B:  BCF    06.5
011C:  BCF    06.6
011D:  BCF    06.7
....................                         timer_sayaci=50; 
011E:  CLRF   3A
011F:  CLRF   39
0120:  CLRF   38
0121:  MOVLW  32
0122:  MOVWF  37
....................                         for(genel_sayac=40;genel_sayac>=1;genel_sayac--) 
0123:  CLRF   29
0124:  MOVLW  28
0125:  MOVWF  28
0126:  MOVF   29,F
0127:  BTFSS  03.2
0128:  GOTO   12D
0129:  MOVF   28,W
012A:  SUBLW  00
012B:  BTFSC  03.0
012C:  GOTO   137
....................                         { 
....................                         output_toggle(led_kullanici); // kullanýcýya geri bildirim vermek için yazýlan kod. 
012D:  MOVLW  02
012E:  XORWF  07,F
....................                         delay_ms(50); 
012F:  MOVLW  32
0130:  MOVWF  3D
0131:  CALL   091
0132:  MOVF   28,W
0133:  BTFSC  03.2
0134:  DECF   29,F
0135:  DECF   28,F
0136:  GOTO   126
....................                         } 
....................                    }                
....................                } 
0137:  GOTO   294
....................     
....................    /* 
....................    aþaðýdaki kodda kullanýlan 0x545F kodu kumandanýn kendisine ait olan 4 karakterlik kodudur(þifresidir). bu kod lojik analizör verileri 
....................    incelenerek bulundu. bu devrenin dökümantasyonunda mevcut. 0x545F kodundan gelen sonraki  da basýlan tuþun numarasýný ifade ediyor. 
....................    */ 
....................     
....................    else if(timer_sayaci>2)// daha önce tuþa basýlmýþ, röle çektikten ve 500msn bekledikten sonra sayaç sýfýrlanmýþ. 
0138:  MOVF   3A,F
0139:  BTFSS  03.2
013A:  GOTO   145
013B:  MOVF   39,F
013C:  BTFSS  03.2
013D:  GOTO   145
013E:  MOVF   38,F
013F:  BTFSS  03.2
0140:  GOTO   145
0141:  MOVF   37,W
0142:  SUBLW  02
0143:  BTFSC  03.0
0144:  GOTO   294
....................    {                 //önceki veriden sonra yaklaþýk 70msn zaman geçmiþ. 
....................         if(veri==(0x545f03) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_1)  ;role_aktiflestirme_islem_sonu();} 
0145:  MOVF   2F,W
0146:  SUBLW  03
0147:  BTFSS  03.2
0148:  GOTO   161
0149:  MOVF   30,W
014A:  SUBLW  5F
014B:  BTFSS  03.2
014C:  GOTO   161
014D:  MOVF   31,W
014E:  SUBLW  54
014F:  BTFSS  03.2
0150:  GOTO   161
0151:  MOVF   32,F
0152:  BTFSS  03.2
0153:  GOTO   161
0154:  MOVF   32,W
0155:  MOVWF  36
0156:  MOVF   31,W
0157:  MOVWF  35
0158:  MOVF   30,W
0159:  MOVWF  34
015A:  MOVF   2F,W
015B:  MOVWF  33
015C:  BSF    07.1
015D:  MOVLW  08
015E:  XORWF  07,F
015F:  CALL   0DF
0160:  GOTO   294
....................    else if(veri==(0x545f0C) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_2)  ;role_aktiflestirme_islem_sonu();}  
0161:  MOVF   2F,W
0162:  SUBLW  0C
0163:  BTFSS  03.2
0164:  GOTO   17D
0165:  MOVF   30,W
0166:  SUBLW  5F
0167:  BTFSS  03.2
0168:  GOTO   17D
0169:  MOVF   31,W
016A:  SUBLW  54
016B:  BTFSS  03.2
016C:  GOTO   17D
016D:  MOVF   32,F
016E:  BTFSS  03.2
016F:  GOTO   17D
0170:  MOVF   32,W
0171:  MOVWF  36
0172:  MOVF   31,W
0173:  MOVWF  35
0174:  MOVF   30,W
0175:  MOVWF  34
0176:  MOVF   2F,W
0177:  MOVWF  33
0178:  BSF    07.1
0179:  MOVLW  10
017A:  XORWF  07,F
017B:  CALL   0DF
017C:  GOTO   294
....................    else if(veri==(0x545f0F) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_3)  ;role_aktiflestirme_islem_sonu();}  
017D:  MOVF   2F,W
017E:  SUBLW  0F
017F:  BTFSS  03.2
0180:  GOTO   199
0181:  MOVF   30,W
0182:  SUBLW  5F
0183:  BTFSS  03.2
0184:  GOTO   199
0185:  MOVF   31,W
0186:  SUBLW  54
0187:  BTFSS  03.2
0188:  GOTO   199
0189:  MOVF   32,F
018A:  BTFSS  03.2
018B:  GOTO   199
018C:  MOVF   32,W
018D:  MOVWF  36
018E:  MOVF   31,W
018F:  MOVWF  35
0190:  MOVF   30,W
0191:  MOVWF  34
0192:  MOVF   2F,W
0193:  MOVWF  33
0194:  BSF    07.1
0195:  MOVLW  20
0196:  XORWF  07,F
0197:  CALL   0DF
0198:  GOTO   294
....................    else if(veri==(0x545f30) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_4)  ;role_aktiflestirme_islem_sonu();}  
0199:  MOVF   2F,W
019A:  SUBLW  30
019B:  BTFSS  03.2
019C:  GOTO   1B5
019D:  MOVF   30,W
019E:  SUBLW  5F
019F:  BTFSS  03.2
01A0:  GOTO   1B5
01A1:  MOVF   31,W
01A2:  SUBLW  54
01A3:  BTFSS  03.2
01A4:  GOTO   1B5
01A5:  MOVF   32,F
01A6:  BTFSS  03.2
01A7:  GOTO   1B5
01A8:  MOVF   32,W
01A9:  MOVWF  36
01AA:  MOVF   31,W
01AB:  MOVWF  35
01AC:  MOVF   30,W
01AD:  MOVWF  34
01AE:  MOVF   2F,W
01AF:  MOVWF  33
01B0:  BSF    07.1
01B1:  MOVLW  40
01B2:  XORWF  07,F
01B3:  CALL   0DF
01B4:  GOTO   294
....................    else if(veri==(0x545f33) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_5)  ;role_aktiflestirme_islem_sonu();}  
01B5:  MOVF   2F,W
01B6:  SUBLW  33
01B7:  BTFSS  03.2
01B8:  GOTO   1D1
01B9:  MOVF   30,W
01BA:  SUBLW  5F
01BB:  BTFSS  03.2
01BC:  GOTO   1D1
01BD:  MOVF   31,W
01BE:  SUBLW  54
01BF:  BTFSS  03.2
01C0:  GOTO   1D1
01C1:  MOVF   32,F
01C2:  BTFSS  03.2
01C3:  GOTO   1D1
01C4:  MOVF   32,W
01C5:  MOVWF  36
01C6:  MOVF   31,W
01C7:  MOVWF  35
01C8:  MOVF   30,W
01C9:  MOVWF  34
01CA:  MOVF   2F,W
01CB:  MOVWF  33
01CC:  BSF    07.1
01CD:  MOVLW  80
01CE:  XORWF  07,F
01CF:  CALL   0DF
01D0:  GOTO   294
....................    else if(veri==(0x545f3C) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_6)  ;role_aktiflestirme_islem_sonu();} 
01D1:  MOVF   2F,W
01D2:  SUBLW  3C
01D3:  BTFSS  03.2
01D4:  GOTO   1ED
01D5:  MOVF   30,W
01D6:  SUBLW  5F
01D7:  BTFSS  03.2
01D8:  GOTO   1ED
01D9:  MOVF   31,W
01DA:  SUBLW  54
01DB:  BTFSS  03.2
01DC:  GOTO   1ED
01DD:  MOVF   32,F
01DE:  BTFSS  03.2
01DF:  GOTO   1ED
01E0:  MOVF   32,W
01E1:  MOVWF  36
01E2:  MOVF   31,W
01E3:  MOVWF  35
01E4:  MOVF   30,W
01E5:  MOVWF  34
01E6:  MOVF   2F,W
01E7:  MOVWF  33
01E8:  BSF    07.1
01E9:  MOVLW  02
01EA:  XORWF  06,F
01EB:  CALL   0DF
01EC:  GOTO   294
....................    else if(veri==(0x545f3F) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_7)  ;role_aktiflestirme_islem_sonu();}  
01ED:  MOVF   2F,W
01EE:  SUBLW  3F
01EF:  BTFSS  03.2
01F0:  GOTO   209
01F1:  MOVF   30,W
01F2:  SUBLW  5F
01F3:  BTFSS  03.2
01F4:  GOTO   209
01F5:  MOVF   31,W
01F6:  SUBLW  54
01F7:  BTFSS  03.2
01F8:  GOTO   209
01F9:  MOVF   32,F
01FA:  BTFSS  03.2
01FB:  GOTO   209
01FC:  MOVF   32,W
01FD:  MOVWF  36
01FE:  MOVF   31,W
01FF:  MOVWF  35
0200:  MOVF   30,W
0201:  MOVWF  34
0202:  MOVF   2F,W
0203:  MOVWF  33
0204:  BSF    07.1
0205:  MOVLW  04
0206:  XORWF  06,F
0207:  CALL   0DF
0208:  GOTO   294
....................    else if(veri==(0x545fC0) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_8)  ;role_aktiflestirme_islem_sonu();}  
0209:  MOVF   2F,W
020A:  SUBLW  C0
020B:  BTFSS  03.2
020C:  GOTO   225
020D:  MOVF   30,W
020E:  SUBLW  5F
020F:  BTFSS  03.2
0210:  GOTO   225
0211:  MOVF   31,W
0212:  SUBLW  54
0213:  BTFSS  03.2
0214:  GOTO   225
0215:  MOVF   32,F
0216:  BTFSS  03.2
0217:  GOTO   225
0218:  MOVF   32,W
0219:  MOVWF  36
021A:  MOVF   31,W
021B:  MOVWF  35
021C:  MOVF   30,W
021D:  MOVWF  34
021E:  MOVF   2F,W
021F:  MOVWF  33
0220:  BSF    07.1
0221:  MOVLW  08
0222:  XORWF  06,F
0223:  CALL   0DF
0224:  GOTO   294
....................    else if(veri==(0x545fC3) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_9)  ;role_aktiflestirme_islem_sonu();}  
0225:  MOVF   2F,W
0226:  SUBLW  C3
0227:  BTFSS  03.2
0228:  GOTO   241
0229:  MOVF   30,W
022A:  SUBLW  5F
022B:  BTFSS  03.2
022C:  GOTO   241
022D:  MOVF   31,W
022E:  SUBLW  54
022F:  BTFSS  03.2
0230:  GOTO   241
0231:  MOVF   32,F
0232:  BTFSS  03.2
0233:  GOTO   241
0234:  MOVF   32,W
0235:  MOVWF  36
0236:  MOVF   31,W
0237:  MOVWF  35
0238:  MOVF   30,W
0239:  MOVWF  34
023A:  MOVF   2F,W
023B:  MOVWF  33
023C:  BSF    07.1
023D:  MOVLW  10
023E:  XORWF  06,F
023F:  CALL   0DF
0240:  GOTO   294
....................    else if(veri==(0x545fCC) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_10) ;role_aktiflestirme_islem_sonu();}   
0241:  MOVF   2F,W
0242:  SUBLW  CC
0243:  BTFSS  03.2
0244:  GOTO   25D
0245:  MOVF   30,W
0246:  SUBLW  5F
0247:  BTFSS  03.2
0248:  GOTO   25D
0249:  MOVF   31,W
024A:  SUBLW  54
024B:  BTFSS  03.2
024C:  GOTO   25D
024D:  MOVF   32,F
024E:  BTFSS  03.2
024F:  GOTO   25D
0250:  MOVF   32,W
0251:  MOVWF  36
0252:  MOVF   31,W
0253:  MOVWF  35
0254:  MOVF   30,W
0255:  MOVWF  34
0256:  MOVF   2F,W
0257:  MOVWF  33
0258:  BSF    07.1
0259:  MOVLW  20
025A:  XORWF  06,F
025B:  CALL   0DF
025C:  GOTO   294
....................    else if(veri==(0x545fCF) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_11) ;role_aktiflestirme_islem_sonu();}   
025D:  MOVF   2F,W
025E:  SUBLW  CF
025F:  BTFSS  03.2
0260:  GOTO   279
0261:  MOVF   30,W
0262:  SUBLW  5F
0263:  BTFSS  03.2
0264:  GOTO   279
0265:  MOVF   31,W
0266:  SUBLW  54
0267:  BTFSS  03.2
0268:  GOTO   279
0269:  MOVF   32,F
026A:  BTFSS  03.2
026B:  GOTO   279
026C:  MOVF   32,W
026D:  MOVWF  36
026E:  MOVF   31,W
026F:  MOVWF  35
0270:  MOVF   30,W
0271:  MOVWF  34
0272:  MOVF   2F,W
0273:  MOVWF  33
0274:  BSF    07.1
0275:  MOVLW  40
0276:  XORWF  06,F
0277:  CALL   0DF
0278:  GOTO   294
....................    else if(veri==(0x545fF0) ){ onceki_veri=veri; output_high(led_kullanici); output_toggle(role_12) ;role_aktiflestirme_islem_sonu();}    
0279:  MOVF   2F,W
027A:  SUBLW  F0
027B:  BTFSS  03.2
027C:  GOTO   294
027D:  MOVF   30,W
027E:  SUBLW  5F
027F:  BTFSS  03.2
0280:  GOTO   294
0281:  MOVF   31,W
0282:  SUBLW  54
0283:  BTFSS  03.2
0284:  GOTO   294
0285:  MOVF   32,F
0286:  BTFSS  03.2
0287:  GOTO   294
0288:  MOVF   32,W
0289:  MOVWF  36
028A:  MOVF   31,W
028B:  MOVWF  35
028C:  MOVF   30,W
028D:  MOVWF  34
028E:  MOVF   2F,W
028F:  MOVWF  33
0290:  BSF    07.1
0291:  MOVLW  80
0292:  XORWF  06,F
0293:  CALL   0DF
....................    } 
0294:  BCF    0A.3
0295:  BCF    0A.4
0296:  GOTO   2BC (RETURN)
....................      
.................... } 
....................  
....................  
.................... //************************************************************************************************* 
.................... //************************************************************************************************* 
.................... void sistem_test(){    
....................    output_low(led_kullanici);    
*
00A6:  BCF    07.1
....................    for(genel_sayac=8;genel_sayac>=1;genel_sayac--) 
00A7:  CLRF   29
00A8:  MOVLW  08
00A9:  MOVWF  28
00AA:  MOVF   29,F
00AB:  BTFSS  03.2
00AC:  GOTO   0B1
00AD:  MOVF   28,W
00AE:  SUBLW  00
00AF:  BTFSC  03.0
00B0:  GOTO   0C7
....................    { 
....................    output_toggle(led_kullanici); 
00B1:  MOVLW  02
00B2:  XORWF  07,F
....................    output_low(role_1);   output_low(role_2);   output_low(role_3);   output_low(role_4); 
00B3:  BCF    07.3
00B4:  BCF    07.4
00B5:  BCF    07.5
00B6:  BCF    07.6
....................    output_low(role_5);   output_low(role_6);   output_low(role_7);   output_low(role_8); 
00B7:  BCF    07.7
00B8:  BCF    06.1
00B9:  BCF    06.2
00BA:  BCF    06.3
....................    output_low(role_9);   output_low(role_10);  output_low(role_11);  output_low(role_12); 
00BB:  BCF    06.4
00BC:  BCF    06.5
00BD:  BCF    06.6
00BE:  BCF    06.7
....................    delay_ms(125); 
00BF:  MOVLW  7D
00C0:  MOVWF  3D
00C1:  CALL   091
00C2:  MOVF   28,W
00C3:  BTFSC  03.2
00C4:  DECF   29,F
00C5:  DECF   28,F
00C6:  GOTO   0AA
....................    } 
....................    output_low(led_kullanici); 
00C7:  BCF    07.1
00C8:  BCF    0A.3
00C9:  BCF    0A.4
00CA:  GOTO   2BA (RETURN)
.................... } 
....................  
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
